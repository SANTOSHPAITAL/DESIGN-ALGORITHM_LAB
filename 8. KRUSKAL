import java.util.Scanner;
class Edge
{
int v1,v2,wt; // wt is the weight of the edge
}
class kruskals
{
Int findp(int i,int p[])
{
While(p[i]!=i)
i=p[i];
return i ;
}
publicstaticvoid main(String args[])
{ 
int i,j,mincost=0;
Scanner br=new Scanner(System.in);
System.out.println(" Enter no.of vertices:");
int v=br.nextInt();
System.out.println(" Enter no.of edges:");
int e=br.nextInt();
Edge ed[]=new Edge[e+1];
Kruskals k =new kruskals();
for(i=1;i<=e;i++)
{
ed[i]=new Edge();
System.out.println(" Enter the vertices and the weight of edge "+(i)+ ":"); 
ed[i].v1=br.nextInt();
ed[i].v2=br.nextInt();
ed[i].wt=br.nextInt();
}
for(i=1;i<=e;i++) // sorting the edges in ascending order
for(j=1;j<=e-1;j++)
{
if(ed[j].wt>ed[j+1].wt)
{
Edge t=new Edge();
t=ed[j];
ed[j]=ed[j+1];
ed[j+1]=t;
}
}
Int p[]=new int[v+1];
for(i=1;i<=v;i++)
p[i]=i ;
System.out.println("MINIMUM SPANNING TREE :");
for(i=1;i<=e;i++)
{ 
int a=k.findp( ed[i].v1,p);
int b=k.findp( ed[i].v2,p);
if(i>v)
break;
elseif(a!=b)
{
P[b]=a;
System.out.println(ed[i].v1+ "-"+ ed[i].v2+
“=”+ed[i].wt);
mincost+=ed[i].wt;
}
}
System.out.println("MINIMUM COST = " +mincost);
}
}
