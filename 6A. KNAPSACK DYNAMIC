import java.util.Scanner;
class knapsack_Dp1
{
 int max1(int a, int b) 
 { 
 return (a > b)? a : b; 
 }
 void knapSack1(int W, int wt[], int val[], int n)
 {
 int i, w;
 int [][]K = new int[n+1][W+1];
 int count=0;
// Build table K[][] in bottom up manner
 for (i = 0; i <= n; i++)
 {
for (int j = 0; j <= W; j++)
 {
 if (i==0 || j==0)
 K[i][j] = 0;
 else if (j-wt[i]>=0 )
 K[i][j] = max1(val[i] + K[i-1][j-wt[i]], K[i-1][j]);
 else
 K[i][j] = K[i-1][j];
 }
 }
 
 int j=W;
 int x[]=new int[100];
 for(i=1;i<=n;i++)
 x[i]=0;
 i=n;
 while(j!=0&&i!=0)
 {
 if(K[i][j]!=K[i-1][j])
 {
 x[i]=1;
 j=j-wt[i];
 i--;
 }
 else
 i--;
 }
 System.out.println("Items included are\n");
 System.out.println("Sl.no\tweight\tprofit\n");
 for(i=1;i<=n;i++)
 if(x[i]==1)
 System.out.println((++count)+ "\t"+wt[i]+ "\t"+val[i]);
 System.out.println("Total profit = "+K[n][W]);
 
 }
 
 public static void main(String args[])
 {
Scanner sc = new Scanner(System.in);
 System.out.println("Enter the number of items: ");
 int n = sc.nextInt();
 System.out.println("Enter the items weights: ");
 int []wt = new int[n+1];
 for(int i=1; i<=n; i++)
 wt[i] = sc.nextInt();
 System.out.println("Enter the items values: ");
 int []val = new int[n+1];
 for(int i=1; i<=n; i++)
 val[i] = sc.nextInt();
 knapsack_Dp1 k= new knapsack_Dp1();
 System.out.println("Enter the maximum capacity: ");
 int W = sc.nextInt(); 
 k.knapSack1(W, wt, val, n);
 
 }
}
